name: Robocopy Task

on:
  workflow_call:
    inputs:
      SourcePath:
        required: true
        type: string
      MachineNames:
        required: true
        type: string
      AdminUserName:
        required: true
        type: string
      TargetPath:
        required: true
        type: string
      CleanTarget:
        required: false
        type: boolean
      CopyFilesInParallel:
        required: false
        type: boolean
    secrets:
      AdminPassword:
        required: true

jobs:
  execute-powershell:
    runs-on: self-hosted

    steps:
      - name: Execute Robocopy via PowerShell
        shell: pwsh
        run: |
          try {
              $sourcePath = "${{ inputs.SourcePath }}"
              $machines = "${{ inputs.MachineNames }}"
              $username = "${{ inputs.AdminUserName }}"
              $password = "${{ secrets.AdminPassword }}"
              $targetPath = "${{ inputs.TargetPath }}"

              # âœ… Use known booleans safely
              $cleanTarget = [bool]::Parse("${{ inputs.CleanTarget || 'false' }}")
              $copyInParallel = [bool]::Parse("${{ inputs.CopyFilesInParallel || 'false' }}")

              $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
              $credential = New-Object System.Management.Automation.PSCredential ($username, $securePassword)

              Write-Host "Mapping network share: $targetPath"
              net use $targetPath /user:$username $password

              $robocopyOptions = "/MIR /Z /R:3 /W:5"
              if ($copyInParallel) { $robocopyOptions += " /MT:8" }
              if ($cleanTarget) { $robocopyOptions += " /PURGE" }

              Write-Host "Running Robocopy with options: $robocopyOptions"
              robocopy $sourcePath $targetPath $robocopyOptions

              Write-Host "Unmapping network share: $targetPath"
              net use $targetPath /delete
          } catch {
              Write-Error "An error occurred: $_"
              exit 1
          }
